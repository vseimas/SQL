WITH CHRT AS (select a.pidm_key, a.id, a.TERM_CODE_KEY, cast(b.IRSV as decimal) as IRSV, cast(b.IRSM as decimal) as IRSM, cast(b.IRSM as decimal)+cast(b.IRSV as decimal) SATT,
       cast(b.TEST_SCORE6 AS INT) AS act_composite,
     case when exists (select 1
                from SORTEST s WITH (NOLOCK)
                where s.SORTEST_TESC_CODE = 'a01'
                and a.pidm_key = s.SORTEST_PIDM
                and s.SORTEST_TEST_SCORE =
                    ( Select max(i.sortest_test_score)
                                from SORTEST i WITH (NOLOCK)
                                where i.SORTEST_TESC_CODE = 'a01' and i.sortest_pidm = s.SORTEST_PIDM) )
                  then (SELECT Top 1 s.SORTEST_TEST_SCORE
              FROM SORTEST s WITH (NOLOCK)
              WHERE s.SORTEST_TESC_CODE = 'a01'
                AND s.SORTEST_PIDM = a.pidm_key
                AND s.SORTEST_TEST_SCORE = (
                    SELECT MAX(i.SORTEST_TEST_SCORE)
                    FROM SORTEST i WITH (NOLOCK)
                    WHERE i.SORTEST_TESC_CODE = 'a01'
                      AND i.SORTEST_PIDM = s.SORTEST_PIDM
                ) )
               ELSE Null END AS ACT_ENG,
    case when exists (select 1
                from SORTEST s WITH (NOLOCK)
                where s.SORTEST_TESC_CODE = 'a02'
                and a.pidm_key = s.SORTEST_PIDM
                and s.SORTEST_TEST_SCORE =
                    ( Select max(i.sortest_test_score)
                                from SORTEST i WITH (NOLOCK)
                                where i.SORTEST_TESC_CODE = 'a02' and i.sortest_pidm = s.SORTEST_PIDM) )
                  then (SELECT Top 1 s.SORTEST_TEST_SCORE
              FROM SORTEST s WITH (NOLOCK)
              WHERE s.SORTEST_TESC_CODE = 'a02'
                AND s.SORTEST_PIDM = a.pidm_key
                AND s.SORTEST_TEST_SCORE = (
                    SELECT MAX(i.SORTEST_TEST_SCORE)
                    FROM SORTEST i WITH (NOLOCK)
                    WHERE i.SORTEST_TESC_CODE = 'a02'
                      AND i.SORTEST_PIDM = s.SORTEST_PIDM
                ) )
               ELSE Null END AS ACT_MATH
from enr a WITH (NOLOCK)
    left join adm b on a.id = b.id
where report = '1'
and a.season = 'fall' and a.year = '2024'
and a.styp_code = 'n'
and a.UOPI_status in ('not UOPI','integrated accelerator')
and b.season = 'fall' and b.year = '2024'
 )

   ,CHRTCNT AS (select count(a.pidm_key) as Cohort
                       from enr a WITH (NOLOCK)
    left join adm b on a.id = b.id and a.TERM_CODE_KEY = b.TERM_CODE_KEY
where report = '1'
and a.season = 'fall' and a.year = '2024'
and a.styp_code = 'n'
and (a.UOPI_status in ('not UOPI','integrated accelerator') or a.UOPI_Status is null)
)

, SCR_RANGES AS (select *,
                        case
                            when (IRSV is not null or IRSM is not null) and (act_eng is not null or act_math is not null) then 'Both'
							when (IRSV is not null or IRSM is not null) then 'SAT'
                            when (act_eng is not null or act_math is not null) then 'ACT'
							else NULL END                                      as Test_Score,
                        case
                            when IRSV >= 700 then '700-800'
                            when IRSV >= 600 and IRSV < 700 then '600-699'
                            when IRSV >= 500 and IRSV < 600 then '500-599'
                            when IRSV >= 400 and IRSV < 500 then '400-499'
                            when IRSV >= 300 and IRSV < 400 then '300-399'
                            when IRSV >= 200 and IRSV < 300 then '200-299' END AS SATV_Range,
                        case
                            when IRSM >= 700 then '700-800'
                            when IRSM >= 600 and IRSM < 700 then '600-699'
                            when IRSM >= 500 and IRSM < 600 then '500-599'
                            when IRSM >= 400 and IRSM < 500 then '400-499'
                            when IRSM >= 300 and IRSM < 400 then '300-399'
                            when IRSM >= 200 and IRSM < 300 then '200-299' END AS SATM_Range,
                        case
                            when SATT >= 1400 then '1400-1600'
                            when SATT >= 1200 and SATT < 1400 then '1200-1399'
                            when SATT >= 1000 and SATT < 1200 then '1000-1199'
                            when SATT >= 800 and SATT < 1000 then '800-999'
                            when SATT >= 600 and SATT < 800 then '600-799'
                            when SATT >= 400 and SATT < 600 then '400-599' END AS SACOMP_Range,
                        case
                            when act_eng >= 30 then '30-36'
                            when act_eng >= 24 and act_eng < 30 then '24-29'
                            when act_eng >= 18 and act_eng < 24 then '18-23'
                            when act_eng >= 12 and act_eng < 18 then '12-17'
                            when act_eng >= 6 and act_eng < 12 then '6-11'
                            when act_eng < 6 then 'Below 6' END                As ACTE_Range,
                        case
                            when act_math >= 30 then '30-36'
                            when act_math >= 24 and act_math < 30 then '24-29'
                            when act_math >= 18 and act_math < 24 then '18-23'
                            when act_math >= 12 and act_math < 18 then '12-17'
                            when act_math >= 6 and act_math < 12 then '6-11'
                            when act_math < 6 then 'Below 6' END               As ACTM_Range,
                        case
                            when act_composite >= 30 then '30-36'
                            when act_composite >= 24 and act_composite < 30 then '24-29'
                            when act_composite >= 18 and act_composite < 24 then '18-23'
                            when act_composite >= 12 and act_composite < 18 then '12-17'
                            when act_composite >= 6 and act_composite < 12 then '6-11'
                            when act_composite < 6 then 'Below 6' END          As ACTCOMP_Range
                 from CHRT WITH (NOLOCK))

,SATPERC AS (select
round(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY IRSV) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC25_RW,
round(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY IRSV) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC50_RW,
round(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY IRSV) OVER (PARTITION BY TERM_CODE_KEY),0)  AS PERC75_RW,
round(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY IRSM) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC25_Math,
round(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY IRSM) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC50_Math,
round(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY IRSM) OVER (PARTITION BY TERM_CODE_KEY),0)  AS PERC75_Math,
round(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY SATT) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC25_Comp,
round(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY SATT) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC50_Comp,
round(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY SATT) OVER (PARTITION BY TERM_CODE_KEY),0)  AS PERC75_Comp
    from SCR_RANGES WITH (NOLOCK)
    where Test_Score in ('SAT','Both' )
	)

, ACTPERC AS (select
round(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY cast(ACT_ENG AS decimal)) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC25_RW,
round(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY cast(ACT_ENG AS decimal)) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC50_RW,
round(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY cast(ACT_ENG AS decimal)) OVER (PARTITION BY TERM_CODE_KEY),0)  AS PERC75_RW,
round(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY cast(act_math AS decimal)) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC25_Math,
round(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY cast(act_math AS decimal)) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC50_Math,
round(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY cast(act_math AS decimal)) OVER (PARTITION BY TERM_CODE_KEY),0)  AS PERC75_Math,
round(PERCENTILE_CONT(0.25) WITHIN GROUP (ORDER BY cast(act_composite as decimal)) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC25_Comp,
round(PERCENTILE_CONT(0.5) WITHIN GROUP (ORDER BY cast(act_composite as decimal)) OVER (PARTITION BY TERM_CODE_KEY),0) AS PERC50_Comp,
round(PERCENTILE_CONT(0.75) WITHIN GROUP (ORDER BY cast(act_composite as decimal)) OVER (PARTITION BY TERM_CODE_KEY),0)  AS PERC75_Comp
    from SCR_RANGES WITH (NOLOCK)
    where Test_Score in ('ACT','Both')
	)

select 'SAT' as TEST,
    PERC25_RW, PERC50_RW, PERC75_RW, PERC25_Math, PERC50_Math, PERC75_Math, PERC25_Comp, PERC50_Comp, PERC75_Comp,  count(*) as Count, Cohort
    from SATPERC WITH (NOLOCK) cross join CHRTCNT
group by PERC25_RW, PERC50_RW, PERC75_RW, PERC25_Math, PERC50_Math, PERC75_Math, PERC25_Comp, PERC50_Comp, PERC75_Comp, Cohort

UNION ALL

select 'ACT' as TEST,
    PERC25_RW, PERC50_RW, PERC75_RW, PERC25_Math, PERC50_Math, PERC75_Math, PERC25_Comp, PERC50_Comp, PERC75_Comp,  count(*) as Count, Cohort
    from ACTPERC WITH (NOLOCK) cross join CHRTCNT
group by PERC25_RW, PERC50_RW, PERC75_RW, PERC25_Math, PERC50_Math, PERC75_Math, PERC25_Comp, PERC50_Comp, PERC75_Comp, Cohort
